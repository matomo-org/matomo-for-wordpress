# to override the environment, you can configure environment variables in a .env file saved in this directory.
# the following environment variables are supported:
#   - PHP_VERSION - defaults to 8.1, must be a version that has an official docker container available
#   - BACKEND - 'mariadb' or 'mysql', defaults to 'mariadb'
#   - WORDPRESS_VERSION - defaults to latest (defined below)
#   - PORT - the port to expose wordpress on, defaults to 3000
#   - WP_ADMIN_USER - the admin wordpress username, defaults to 'root'
#   - WP_ADMIN_EMAIL - the admin user's email, defaults to 'nobody@nowhere.local'
#   - WOOCOMMERCE - if set, installs and sets up woocommerce
#   - WOOCOMMERCE_PIWIK_ANALYTICS - path to woocommerce-piwik-analytics repo clone to link to in wordpress
#   - MULTISITE - if set to '1', creates a multisite wordpress install. the folder will be suffixed with '-multi'

services:
  # basic apache service
  wordpress:
    env_file:
      - .env.default
      - .env
    build:
      context: ./scripts
      dockerfile: ./Dockerfile.local
      args:
        PHP_VERSION: "$PHP_VERSION"
        PHP_TYPE: apache
    volumes:
      - ./docker/wordpress:/var/www/html
      - .:/var/www/html/matomo-for-wordpress
      - ./scripts/local-dev-entrypoint.sh:/usr/src/entrypoint.sh
      - ./docker/wp-cli:/.wp-cli
      - ./docker/php-custom.ini:/usr/local/etc/php/conf.d/php-custom.ini
      - "$WOOCOMMERCE_PIWIK_ANALYTICS:/var/www/html/woocommerce-piwik-analytics"
      - ./scripts/local-gitconfig:/root/.gitconfig
    ports:
      - "$PORT:80"
    entrypoint: /usr/src/entrypoint.sh
    depends_on:
      - $BACKEND
    deploy:
      restart_policy:
        condition: on-failure

  # nginx service
  fpm:
    env_file:
      - .env.default
      - .env
    build:
      context: .
      dockerfile: ./scripts/Dockerfile.local
      args:
        PHP_VERSION: "$PHP_VERSION"
        PHP_TYPE: fpm
    volumes:
      - ./docker/wordpress:/var/www/html
      - .:/var/www/html/matomo-for-wordpress
      - ./scripts/local-dev-entrypoint.sh:/usr/src/entrypoint.sh
      - ./docker/wp-cli:/.wp-cli
      - ./docker/php-custom.ini:/usr/local/etc/php/conf.d/php-custom.ini
      - "$WOOCOMMERCE_PIWIK_ANALYTICS:/var/www/html/woocommerce-piwik-analytics"
      - ./scripts/local-gitconfig:/.gitconfig
    entrypoint: /usr/src/entrypoint.sh
    depends_on:
      - "$BACKEND"
    deploy:
      restart_policy:
        condition: on-failure
  nginx:
    image: nginx
    volumes:
      - ./scripts/local-dev-nginx.conf:/etc/nginx/conf.d/default.conf
      - ./docker/wordpress:/var/www/html
      - .:/var/www/html/matomo-for-wordpress
    depends_on:
      - fpm
    ports:
      - "$PORT:80"
    deploy:
      restart_policy:
        condition: on-failure

  # service for running CLI utilities including wp-cli, the matomo console and phpunit
  wp:
    env_file:
      - .env.default
      - .env
    build:
      context: ./scripts
      dockerfile: ./Dockerfile.local
      args:
        PHP_VERSION: "$PHP_VERSION"
        PHP_TYPE: apache
    volumes:
      - ./docker/wordpress:/var/www/html
      - .:/var/www/html/matomo-for-wordpress
      - ./docker/wp-cli:/.wp-cli
      - ./docker/php-custom.ini:/usr/local/etc/php/conf.d/php-custom.ini
      - ./scripts/local-dev-entrypoint.sh:/usr/src/entrypoint.sh
      - ./scripts/local-gitconfig:/.gitconfig
    ports:
      - "$PORT:80"
    user: "${UID:-1000}:${GID:-1000}"
    entrypoint: /usr/src/entrypoint.sh
    environment:
      EXECUTE_WP_CLI: 1
    depends_on:
      - "$BACKEND"
  console:
    env_file:
      - .env.default
      - .env
    build:
      context: ./scripts
      dockerfile: ./Dockerfile.local
      args:
        PHP_VERSION: "$PHP_VERSION"
        PHP_TYPE: apache
    volumes:
      - ./docker/wordpress:/var/www/html
      - .:/var/www/html/matomo-for-wordpress
      - ./docker/php-custom.ini:/usr/local/etc/php/conf.d/php-custom.ini
      - ./scripts/local-dev-entrypoint.sh:/usr/src/entrypoint.sh
      - "$WOOCOMMERCE_PIWIK_ANALYTICS:/var/www/html/woocommerce-piwik-analytics"
      - ./scripts/local-gitconfig:/.gitconfig
    ports:
      - "$PORT:80"
    user: "${UID:-1000}:${GID:-1000}"
    entrypoint: /usr/src/entrypoint.sh
    environment:
      EXECUTE_CONSOLE: 1
    depends_on:
      - "${BACKEND:-mariadb}"
  phpunit:
    env_file:
      - .env.default
      - .env
    build:
      context: ./scripts
      dockerfile: ./Dockerfile.local
      args:
        PHP_VERSION: "$PHP_VERSION"
        PHP_TYPE: apache
    volumes:
      - ./docker/wordpress:/var/www/html
      - .:/var/www/html/matomo-for-wordpress
      - ./docker/php-custom.ini:/usr/local/etc/php/conf.d/php-custom.ini
      - ./scripts/local-dev-entrypoint.sh:/usr/src/entrypoint.sh
      - "$WOOCOMMERCE_PIWIK_ANALYTICS:/var/www/html/woocommerce-piwik-analytics"
    environment:
      EXECUTE_PHPUNIT: 1
    ports:
      - "$PORT:80"
    user: "${UID:-1000}:${GID:-1000}"
    entrypoint: /usr/src/entrypoint.sh
    depends_on:
      - "${BACKEND:-mariadb}"

  # database service definitions
  mariadb:
    image: mariadb
    environment:
      MYSQL_ROOT_PASSWORD: pass
    volumes:
      - ./docker/mariadb:/var/lib/mysql:delegated
      - ./docker/maria_custom_my.cnf:/etc/mysql/conf.d/mycustom.cnf
    deploy:
      restart_policy:
        condition: on-failure
  mysql:
    image: mysql
    environment:
      MYSQL_ROOT_PASSWORD: pass
    volumes:
      - ./docker/mysql:/var/lib/mysql:delegated
      - ./docker/container-files/mysql_custom_my.cnf:/etc/mysql/conf.d/mycustom.cnf
    deploy:
      restart_policy:
        condition: on-failure
