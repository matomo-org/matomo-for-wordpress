# to override the environment, you can configure environment variables in a .env file saved in this directory.
# the following environment variables are supported:
#   - PHP_VERSION - defaults to 8.1, must be a version that has an official docker container available
#   - BACKEND - 'mariadb' or 'mysql', defaults to 'mariadb'
#   - WORDPRESS_VERSION - defaults to latest (defined below)
#   - PORT - the port to expose wordpress on, defaults to 3000
#   - WP_ADMIN_USER - the admin wordpress username, defaults to 'root'
#   - WP_ADMIN_EMAIL - the admin user's email, defaults to 'nobody@nowhere.local'
#   - WOOCOMMERCE - if set, installs and sets up woocommerce
#   - WOOCOMMERCE_PIWIK_ANALYTICS - path to woocommerce-piwik-analytics repo clone to link to in wordpress

services:
  # basic apache service
  wordpress:
    build:
      context: ./scripts
      dockerfile: ./Dockerfile.local
      args:
        PHP_VERSION: "$PHP_VERSION"
        PHP_TYPE: apache
    volumes:
      - ./docker/wordpress:/var/www/html
      - .:/var/www/html/matomo-for-wordpress
      - /var/www/html/matomo-for-wordpress/app/tmp
      - ./scripts/local-dev-entrypoint.sh:/usr/src/entrypoint.sh
      - ./docker/wp-cli:/.wp-cli
      - "${WOOCOMMERCE_PIWIK_ANALYTICS:-/dev/null}:/var/www/html/woocommerce-piwik-analytics"
    ports:
      - "${PORT:-3000}:80"
    environment:
      WORDPRESS_VERSION: "$WORDPRESS_VERSION"
      WORDPRESS_FOLDER: "$WORDPRESS_FOLDER"
      RESET_DATABASE: "$RESET_DATABASE"
      WP_DB_HOST: "${BACKEND:-mariadb}"
      WOOCOMMERCE: "${WOOCOMMERCE:-}"
      WP_ADMIN_USER: "${WP_ADMIN_USER:-root}"
      WP_ADMIN_EMAIL: "${WP_ADMIN_EMAIL:-nobody@nowhere.local}"
    entrypoint: /usr/src/entrypoint.sh
    depends_on:
      - "${BACKEND:-mariadb}"
    deploy:
      restart_policy:
        condition: on-failure

  # nginx service
  fpm:
    build:
      context: .
      dockerfile: ./scripts/Dockerfile.local
      args:
        PHP_VERSION: "$PHP_VERSION"
        PHP_TYPE: fpm
    volumes:
      - ./docker/wordpress:/var/www/html
      - .:/var/www/html/matomo-for-wordpress
      - /var/www/html/matomo-for-wordpress/app/tmp
      - ./scripts/local-dev-entrypoint.sh:/usr/src/entrypoint.sh
      - ./docker/wp-cli:/.wp-cli
      - "${WOOCOMMERCE_PIWIK_ANALYTICS:-/dev/null}:/var/www/html/woocommerce-piwik-analytics"
    environment:
      WORDPRESS_VERSION: "$WORDPRESS_VERSION"
      WORDPRESS_FOLDER: "$WORDPRESS_FOLDER"
      RESET_DATABASE: "$RESET_DATABASE"
      WP_DB_HOST: "${BACKEND:-mariadb}"
      WOOCOMMERCE: "$WOOCOMMERCE"
      WP_ADMIN_USER: "${WP_ADMIN_USER:-root}"
      WP_ADMIN_EMAIL: "${WP_ADMIN_EMAIL:-nobody@nowhere.local}"
    entrypoint: /usr/src/entrypoint.sh
    depends_on:
      - "${BACKEND:-mariadb}"
    deploy:
      restart_policy:
        condition: on-failure
  nginx:
    image: nginx
    volumes:
      - ./scripts/local-dev-nginx.conf:/etc/nginx/conf.d/default.conf
      - ./docker/wordpress:/var/www/html
      - .:/var/www/html/matomo-for-wordpress
      - /var/www/html/matomo-for-wordpress/app/tmp
    depends_on:
      - fpm
    ports:
      - "${PORT:-3000}:80"
    deploy:
      restart_policy:
        condition: on-failure

  # service for running wp-cli
  wp:
    build:
      context: ./scripts
      dockerfile: ./Dockerfile.local
      args:
        PHP_VERSION: "$PHP_VERSION"
        PHP_TYPE: apache
    volumes:
      - ./docker/wordpress:/var/www/html
      - .:/var/www/html/matomo-for-wordpress
      - /var/www/html/matomo-for-wordpress/app/tmp
      - ./docker/wp-cli:/.wp-cli
      - "${WOOCOMMERCE_PIWIK_ANALYTICS:-/dev/null}:/var/www/html/woocommerce-piwik-analytics"
    ports:
      - "${PORT:-3000}:80"
    environment:
      WORDPRESS_VERSION: "$WORDPRESS_VERSION"
      WORDPRESS_FOLDER: "$WORDPRESS_FOLDER"
      RESET_DATABASE: "$RESET_DATABASE"
      WP_DB_HOST: "${BACKEND:-mariadb}"
      WOOCOMMERCE: "$WOOCOMMERCE"
      WP_ADMIN_USER: "${WP_ADMIN_USER:-root}"
      WP_ADMIN_EMAIL: "${WP_ADMIN_EMAIL:-nobody@nowhere.local}"
      PAGER: 'more'
    user: "${UID:-1000}:${GID:-1000}"
    entrypoint: "/var/www/html/wp-cli.phar --path=/var/www/html/${WORDPRESS_VERSION}"
    depends_on:
      - "${BACKEND:-mariadb}"
  console:
    build:
      context: ./scripts
      dockerfile: ./Dockerfile.local
      args:
        PHP_VERSION: "$PHP_VERSION"
        PHP_TYPE: apache
    volumes:
      - ./docker/wordpress:/var/www/html
      - .:/var/www/html/matomo-for-wordpress
      - /var/www/html/matomo-for-wordpress/app/tmp
      - "${WOOCOMMERCE_PIWIK_ANALYTICS:-/dev/null}:/var/www/html/woocommerce-piwik-analytics"
    ports:
      - "${PORT:-3000}:80"
    environment:
      WP_DB_HOST: "${BACKEND:-mariadb}"
      WOOCOMMERCE: "$WOOCOMMERCE"
      WP_ADMIN_USER: "${WP_ADMIN_USER:-root}"
      WP_ADMIN_EMAIL: "${WP_ADMIN_EMAIL:-nobody@nowhere.local}"
    user: "${UID:-1000}:${GID:-1000}"
    entrypoint: "/var/www/html/${WORDPRESS_VERSION:-6.3.1}/wp-content/plugins/matomo/app/console"
    depends_on:
      - "${BACKEND:-mariadb}"

  # database service definitions
  mariadb:
    image: mariadb
    environment:
      MYSQL_ROOT_PASSWORD: pass
    volumes:
      - ./docker/mariadb:/var/lib/mysql:delegated
      - ./docker/maria_custom_my.cnf:/etc/mysql/conf.d/mycustom.cnf
    deploy:
      restart_policy:
        condition: on-failure
  mysql:
    image: mysql
    environment:
      MYSQL_ROOT_PASSWORD: pass
    volumes:
      - ./docker/mysql:/var/lib/mysql:delegated
      - ./docker/container-files/mysql_custom_my.cnf:/etc/mysql/conf.d/mycustom.cnf
    deploy:
      restart_policy:
        condition: on-failure
