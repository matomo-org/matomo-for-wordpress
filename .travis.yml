sudo: false
dist: trusty

language: php

install:
  - cd ..
  - ls
  - mv wp-matomo matomo
  - cd matomo
  - MATOMO_PLUGIN_DIR_PATH=`pwd`

notifications:
  email:
    on_success: never
    on_failure: change

cache:
  directories:
    - $HOME/.composer/cache

matrix:
  include:
    - php: 7.3
      env: WP_VERSION=latest
    - php: 7.2
      env: WP_VERSION=latest
    - php: 7.1
      env: WP_VERSION=latest
    - php: 7.0
      env: WP_VERSION=latest
    - php: 7.0
      env: WP_VERSION=5.0
    - php: 7.0
      env: WP_VERSION=trunk
    - php: 7.0
      env: WP_TRAVISCI=phpcs
  allow_failures:
    - env: WP_TRAVISCI=phpcs

before_install:
  - if [[ "$WP_TRAVISCI" == "phpcs" ]]; then export PHPCS_DIR=/tmp/phpcs; fi
  - if [[ "$WP_TRAVISCI" == "phpcs" ]]; then export SNIFFS_DIR=/tmp/sniffs; fi
  # Install PHP_CodeSniffer.
  - if [[ "$WP_TRAVISCI" == "phpcs" ]]; then git clone -b master --depth 1 https://github.com/squizlabs/PHP_CodeSniffer.git $PHPCS_DIR; fi
  # Install WordPress Coding Standards.
  - if [[ "$WP_TRAVISCI" == "phpcs" ]]; then git clone -b master --depth 1 https://github.com/WordPress/WordPress-Coding-Standards.git $SNIFFS_DIR; fi
  # Set install path for WordPress Coding Standards.
  - if [[ "$WP_TRAVISCI" == "phpcs" ]]; then $PHPCS_DIR/bin/phpcs --config-set installed_paths $SNIFFS_DIR; fi
  # After CodeSniffer install you should refresh your path.
  - if [[ "$WP_TRAVISCI" == "phpcs" ]]; then phpenv rehash; fi

before_script:
  - export PATH="$HOME/.composer/vendor/bin:$PATH"
  - |
    if [ -f ~/.phpenv/versions/$(phpenv version-name)/etc/conf.d/xdebug.ini ]; then
      phpenv config-rm xdebug.ini
    else
      echo "xdebug.ini does not exist"
    fi
  - |
    if [[ ! -z "$WP_VERSION" ]] ; then
      bash bin/install-wp-tests.sh wordpress_test root '' localhost $WP_VERSION
      composer global require "phpunit/phpunit=4.8.*|5.7.*"
    fi
  - |
    if [[ "$WP_TRAVISCI" == "phpcs" ]] ; then
      composer global require "dealerdirect/phpcodesniffer-composer-installer"
      composer global require "phpcompatibility/phpcompatibility-wp"
      composer global require "squizlabs/php_codesniffer"
      composer global require "wp-coding-standards/wpcs"
    fi


script:
  - |
    if [[ ! -z "$WP_VERSION" ]] ; then
      phpunit
      WP_MULTISITE=1 phpunit
    fi
  - |
    if [[ "$WP_TRAVISCI" == "phpcs" ]] ; then
      $HOME/.composer/vendor/bin/phpcs -v
    fi
